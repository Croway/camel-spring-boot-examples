<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>spring-boot</artifactId>
        <version>4.10.6.redhat-00003</version>
    </parent>
    <groupId>org.apache.camel.springboot.example</groupId>
    <artifactId>examples</artifactId>
    <version>4.10.6-SNAPSHOT</version>
    <name>Camel SB :: Examples</name>
    <description>Camel Examples</description>
    <packaging>pom</packaging>
    <modules>
        <module>activemq</module>
        <module>actuator-http-metrics</module>
        <module>amq-cert-manager</module>
        <module>amqp</module>
        <module>amqp-salesforce</module>
        <module>arangodb</module>
        <module>artemis</module>
        <module>aws2-s3</module>
        <module>azure</module>
        <module>endpointdsl</module>
        <module>fhir</module>
        <module>fhir-auth-tx</module>
        <module>health-checks</module>
        <module>http-ssl</module>
        <module>infinispan</module>
        <module>jira</module>
        <module>jolokia</module>
        <module>kafka-avro</module>
        <module>kafka-oauth-ocp</module>
        <module>kafka-offsetrepository</module>
        <module>kamelet-chucknorris</module>
        <module>load-balancer-eip</module>
        <module>mail-ms-exchange-oauth2</module>
        <module>master</module>
        <module>metrics</module>
        <module>monitoring-micrometrics-grafana-prometheus</module>
        <module>multi-datasource-2pc</module>
        <module>observation</module>
        <module>openapi-contract-first</module>
        <module>opentelemetry</module>
        <module>paho-mqtt5-shared-subscriptions</module>
        <module>platform-http</module>
        <module>pojo</module>
        <module>quartz</module>
        <module>rabbitmq</module>
        <module>reactive-streams</module>
        <module>resilience4j</module>
        <module>rest-cxf-opentelemetry</module>
        <module>rest-openapi</module>
        <module>rest-openapi-simple</module>
        <module>rest-openapi-springdoc</module>
        <module>rest-spring-security</module>
        <module>route-reload</module>
        <module>routes-configuration</module>
        <module>routetemplate</module>
        <module>routetemplate-xml</module>
        <module>saga</module>
        <module>soap-cxf</module>
        <module>splitter-eip</module>
        <module>spring-boot</module>
        <module>spring-boot-cxf-jaxws</module>
        <module>spring-boot-cxf-jaxws-xml</module>
        <module>spring-boot-jta-jpa-autoconfigure</module>
        <module>spring-boot-jta-jpa-xml</module>
        <module>spring-jdbc</module>
        <module>strimzi</module>
        <module>supervising-route-controller</module>
        <module>tomcat-jdbc</module>
        <module>type-converter</module>
        <module>validator</module>
        <module>webhook</module>
        <module>widget-gadget</module>
        <module>xml</module>
        <module>xml-import</module>
    </modules>
    <repositories>
        <repository>
            <id>apache.snapshots</id>
            <url>https://repository.apache.org/snapshots/</url>
            <name>Apache Snapshot Repo</name>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>apache.snapshots</id>
            <url>https://repository.apache.org/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- update readme file -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-package-maven-plugin</artifactId>
                <version>${camel-community-version}</version>
                <configuration>
                    <startingFolder/>
                    <filter>spring-boot</filter>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-example</goal>
                        </goals>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- to validate Camel endpoints: mvn camel-report:validate -->
            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-report-maven-plugin</artifactId>
                <version>${camel-community-version}</version>
                <configuration>
                    <failOnError>false</failOnError>
                    <includeTest>true</includeTest>
                    <includeXml>true</includeXml>
                    <ignoreLenientProperties>false</ignoreLenientProperties>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <systemPropertyVariables>
                        <skipStartingCamelContext>${skip.starting.camel.context}</skipStartingCamelContext>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>update-properties</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:update-property</argument>
                                <argument>-Dproperty=hapi-version,guava-version,exec-maven-plugin-version,metrics-version,lombok-mapstruct-binding.version,mapstruct-version,activemq-version,testcontainers-version,javafaker-version,apicurio-version,avro.maven.plugin-version,prometheus-version,reactor-version,build-helper-maven-plugin-version,maven-resources-plugin-version,awaitility-version</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                                <argument>-Dmaven.version.ignore=(?i).*-(alpha|beta|m|rc)([-.]?\d+)?</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-camel</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=camel-version</argument>
                                <argument>-DnewVersion=${camel-version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-camel-spring-boot</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=camel-spring-boot-version</argument>
                                <argument>-DnewVersion=${project.parent.version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-spring-boot</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=spring-boot-version</argument>
                                <argument>-DnewVersion=${spring-boot-version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-cxf</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=cxf-version</argument>
                                <argument>-DnewVersion=${cxf-version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-camel-community</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=camel-community-version</argument>
                                <argument>-DnewVersion=${camel-community-version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-jkube</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=jkube-maven-plugin-version</argument>
                                <argument>-DnewVersion=${openshift-maven-plugin-version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                                <argument>-DprofileId=openshift</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-jolokia</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mvn</executable>
                            <arguments>
                                <argument>versions:set-property</argument>
                                <argument>-Dproperty=jolokia-version</argument>
                                <argument>-DnewVersion=${jolokia-version}</argument>
                                <argument>-DgenerateBackupPoms=false</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.jkube</groupId>
                    <artifactId>openshift-maven-plugin</artifactId>
                    <version>${jkube-maven-plugin-version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>container-test</id>
            <properties>
                <skip.starting.camel.context>true</skip.starting.camel.context>
            </properties>
        </profile>
        <!--
		  This profile allows you to add a repository to the repo list so that
		  you can test the examples out against a staged version of the camel distribution
		-->
        <profile>
            <id>add-remote-repo</id>
            <activation>
                <property>
                    <name>remoteRepo</name>
                </property>
            </activation>
            <repositories>
                <repository>
                    <id>dynamic.repo</id>
                    <name>Repository Dynamically Added Via the Command Line</name>
                    <url>$remoteRepo</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>dynamic.repo</id>
                    <name>Repository Dynamically Added Via the Command Line</name>
                    <url>$remoteRepo</url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>
</project>
