<?xml version="1.0"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>camel-example-spring-boot-rest-spring-security</artifactId>
    <groupId>org.apache.camel.springboot.example</groupId>
    <version>4.14.1-SNAPSHOT</version>
    <name>Camel SB Examples :: REST DSL - Spring Security - JWT</name>
    <description>An example showing Camel REST DSL secured with Spring Security and JWT token in a Spring Boot application
    </description>
    <properties>
        <category>Rest</category>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <camel-spring-boot-version>4.14.1.redhat-00001</camel-spring-boot-version>
        <spring-boot-version>3.5.6</spring-boot-version>
        <json-unit-assertj.version>4.1.0</json-unit-assertj.version>
        <testcontainers-keycloak.version>3.6.0</testcontainers-keycloak.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <mapstruct-version>1.6.3</mapstruct-version>
    </properties>
    <!-- Spring-Boot and Camel BOM -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.redhat.camel.springboot.platform</groupId>
                <artifactId>camel-spring-boot-bom</artifactId>
                <version>${camel-spring-boot-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-platform-http-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jackson-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-mapstruct-starter</artifactId>
        </dependency>
        <!-- monitoring -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-management-starter</artifactId>
        </dependency>
        <!-- include springdoc so we can browse the api docs in a swagger web ui -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-springdoc-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-security-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- TEST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit-assertj</artifactId>
            <version>${json-unit-assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.dasniko</groupId>
            <artifactId>testcontainers-keycloak</artifactId>
            <version>${testcontainers-keycloak.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct-version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <configuration>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <alias>keycloak</alias>
                                    <name>quay.io/keycloak/keycloak:26.1</name>
                                    <run>
                                        <env>
                                            <KC_BOOTSTRAP_ADMIN_USERNAME>admin</KC_BOOTSTRAP_ADMIN_USERNAME>
                                            <KC_BOOTSTRAP_ADMIN_PASSWORD>admin</KC_BOOTSTRAP_ADMIN_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>8080:8080</port>
                                        </ports>
                                        <network>
                                            <mode>host</mode>
                                            <name>keycloak</name>
                                        </network>
                                        <volumes>
                                            <bind>
                                                <volume> ${project.basedir}/src/test/resources/keycloak:/opt/keycloak/data/import</volume>
                                            </bind>
                                        </volumes>
                                        <cmd>
                                            <exec>
                                                <args>start-dev</args>
                                                <args>--import-realm</args>
                                            </exec>
                                        </cmd>
                                    </run>
                                </image>
                                <image>
                                    <alias>app</alias>
                                    <name>csb-app</name>
                                    <build>
                                        <from>eclipse-temurin:17.0.8.1_1-jre-alpine</from>
                                        <assemblies>
                                            <assembly>
                                                <descriptorRef>artifact</descriptorRef>
                                                <targetDir>/work</targetDir>
                                            </assembly>
                                        </assemblies>
                                        <cmd>
                                            <shell>java -jar /work/${project.build.finalName}.${project.packaging}</shell>
                                        </cmd>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>8081:8081</port>
                                        </ports>
                                        <dependsOn>
                                            <container>keycloak</container>
                                        </dependsOn>
                                        <network>
                                            <mode>host</mode>
                                            <name>app</name>
                                        </network>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
		<profile>
	      	<id>openshift</id>
	      	<properties>
				<sbProfile>openshift</sbProfile>
				<jkube.enricher.jkube-service.name>csb-rest-spring-security</jkube.enricher.jkube-service.name>
				<jkube.enricher.jkube-controller.name>csb-rest-spring-security</jkube.enricher.jkube-controller.name>
				<jkube.enricher.jkube-controller.type>Deployment</jkube.enricher.jkube-controller.type>
				<jkube-maven-plugin-version>1.18.1.redhat-00052</jkube-maven-plugin-version>
			</properties>
	      	<build>
				<plugins>
				  <plugin>
					<groupId>org.eclipse.jkube</groupId>
					<artifactId>openshift-maven-plugin</artifactId>
					<version>${jkube-maven-plugin-version}</version>
					<configuration>
					  <resources>
					<serviceAccount>secret-reader</serviceAccount>
					<serviceAccounts>
					  <serviceAccount>
						<name>secret-reader</name>
						<deploymentRef>${jkube.enricher.jkube-controller.name}</deploymentRef>
					  </serviceAccount>
					</serviceAccounts>
					  </resources>
					</configuration>
					<executions>
					  <execution>
					<goals>
					  <goal>resource</goal>
					  <goal>build</goal>
					  <goal>deploy</goal>
					</goals>
					  </execution>
					</executions>
				  </plugin>
				</plugins>
	      </build>
    	</profile>
    </profiles>
</project>
