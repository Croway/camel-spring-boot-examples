## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

camel.main.name = kafka-oauth-ocp

# to automatic shutdown the JVM after a period of time
#camel.main.duration-max-seconds=60
#camel.main.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.main.duration-max-idle-seconds=15

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=info,health,camelroutes

# turn on actuator health check
management.endpoint.health.enabled = true

# allow to obtain basic information about camel routes (read only mode)
management.endpoint.camelroutes.enabled = true
management.endpoint.camelroutes.read-only = true

# to configure logging levels
#logging.level.org.apache.kafka = TRACE
#logging.level.io.strimzi = TRACE
#logging.level.org.apache.kafka.common.telemetry = INFO
#logging.level.org.apache.kafka.common.metrics = INFO
#logging.level.org.apache.kafka.clients.NetworkClient = INFO
logging.level.org.apache.kafka.clients.producer.internals.TransactionManager = WARN

camel.component.kafka.brokers = example-kafka-cluster-kafka-bootstrap:9093
camel.component.kafka.security-protocol = SASL_SSL
camel.component.kafka.sasl-mechanism = OAUTHBEARER
camel.component.kafka.sasl-jaas-config = org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.access.token.location="/var/run/secrets/kubernetes.io/serviceaccount/token" ;
camel.component.kafka.additional-properties[sasl.login.callback.handler.class]=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
